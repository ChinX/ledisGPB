// Code generated by protoc-gen-go.
// source: pipeline.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Pipeline_Flavour int32

const (
	Pipeline_SWEET         Pipeline_Flavour = 0
	Pipeline_SOUR          Pipeline_Flavour = 1
	Pipeline_UMAMI         Pipeline_Flavour = 2
	Pipeline_GOPHERLICIOUS Pipeline_Flavour = 3
)

var Pipeline_Flavour_name = map[int32]string{
	0: "SWEET",
	1: "SOUR",
	2: "UMAMI",
	3: "GOPHERLICIOUS",
}
var Pipeline_Flavour_value = map[string]int32{
	"SWEET":         0,
	"SOUR":          1,
	"UMAMI":         2,
	"GOPHERLICIOUS": 3,
}

func (x Pipeline_Flavour) String() string {
	return proto.EnumName(Pipeline_Flavour_name, int32(x))
}
func (Pipeline_Flavour) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type Pipeline struct {
	Namespace   string            `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SelfLink    string            `protobuf:"bytes,3,opt,name=selfLink" json:"selfLink,omitempty"`
	Creation    string            `protobuf:"bytes,4,opt,name=creation" json:"creation,omitempty"`
	Deletion    string            `protobuf:"bytes,5,opt,name=deletion" json:"deletion,omitempty"`
	Timeout     uint64            `protobuf:"varint,6,opt,name=timeout" json:"timeout,omitempty"`
	Labels      map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations map[string]string `protobuf:"bytes,8,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NumList     []int32           `protobuf:"varint,9,rep,packed,name=numList" json:"numList,omitempty"`
	Stages      []*Stage          `protobuf:"bytes,10,rep,name=stages" json:"stages,omitempty"`
	Status      string            `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	Unpacked    []int64           `protobuf:"varint,12,rep,name=unpacked" json:"unpacked,omitempty"`
}

func (m *Pipeline) Reset()                    { *m = Pipeline{} }
func (m *Pipeline) String() string            { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()               {}
func (*Pipeline) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Pipeline) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Pipeline) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Pipeline) GetStages() []*Stage {
	if m != nil {
		return m.Stages
	}
	return nil
}

func init() {
	proto.RegisterType((*Pipeline)(nil), "protos.pipeline")
	proto.RegisterEnum("protos.Pipeline_Flavour", Pipeline_Flavour_name, Pipeline_Flavour_value)
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x92, 0xdf, 0xeb, 0xd3, 0x30,
	0x14, 0xc5, 0xbf, 0xfd, 0xb9, 0xf6, 0xd6, 0x49, 0xbd, 0x88, 0x84, 0x32, 0xa4, 0x0e, 0x84, 0x3e,
	0xed, 0x41, 0x7d, 0x50, 0x11, 0x61, 0x8e, 0xaa, 0x83, 0x8e, 0x49, 0xe6, 0xf0, 0x39, 0xdb, 0xa2,
	0x94, 0x75, 0x69, 0x69, 0xd2, 0xc1, 0xfe, 0x52, 0xff, 0x1d, 0x69, 0xda, 0x6e, 0x43, 0x9f, 0x7c,
	0x6a, 0xce, 0xf9, 0xdc, 0x93, 0xf6, 0x34, 0x81, 0xc7, 0x55, 0x5e, 0xf1, 0x22, 0x17, 0x7c, 0x56,
	0xd5, 0xa5, 0x2a, 0xd1, 0xd5, 0x0f, 0x19, 0x05, 0x52, 0xb1, 0x5f, 0xbd, 0x39, 0xfd, 0x6d, 0x83,
	0x37, 0xcc, 0xe1, 0x04, 0x7c, 0xc1, 0x4e, 0x5c, 0x56, 0x6c, 0xcf, 0x89, 0x11, 0x1b, 0x89, 0x4f,
	0x6f, 0x06, 0x22, 0xd8, 0xad, 0x20, 0xa6, 0x06, 0x7a, 0x8d, 0x11, 0x78, 0x92, 0x17, 0x3f, 0xb3,
	0x5c, 0x1c, 0x89, 0xa5, 0xfd, 0xab, 0x6e, 0xd9, 0xbe, 0xe6, 0x4c, 0xe5, 0xa5, 0x20, 0x76, 0xc7,
	0x06, 0xdd, 0xb2, 0x03, 0x2f, 0xb8, 0x66, 0x4e, 0xc7, 0x06, 0x8d, 0x04, 0x46, 0x2a, 0x3f, 0xf1,
	0xb2, 0x51, 0xc4, 0x8d, 0x8d, 0xc4, 0xa6, 0x83, 0xc4, 0x37, 0xe0, 0x16, 0x6c, 0xc7, 0x0b, 0x49,
	0x46, 0xb1, 0x95, 0x04, 0xaf, 0x26, 0x5d, 0x09, 0x39, 0xbb, 0x36, 0xcd, 0x34, 0x4e, 0x85, 0xaa,
	0x2f, 0xb4, 0x9f, 0xc5, 0x05, 0x04, 0x4c, 0x88, 0x52, 0xe9, 0x37, 0x4b, 0xe2, 0xe9, 0xe8, 0x8b,
	0x7f, 0xa2, 0xf3, 0xdb, 0x4c, 0x97, 0xbf, 0x4f, 0xb5, 0x1f, 0x25, 0x9a, 0x53, 0x96, 0x4b, 0x45,
	0xfc, 0xd8, 0x4a, 0x1c, 0x3a, 0x48, 0x7c, 0x09, 0xae, 0xfe, 0xa1, 0x92, 0x80, 0xde, 0x79, 0x3c,
	0xec, 0xac, 0x5d, 0xda, 0x43, 0x7c, 0xa6, 0xc7, 0x54, 0x23, 0x49, 0xa0, 0xfb, 0xf6, 0x0a, 0x9f,
	0x83, 0xd7, 0x88, 0x8a, 0xed, 0x8f, 0xfc, 0x40, 0x1e, 0xc5, 0x56, 0x62, 0x7d, 0x32, 0xc3, 0x07,
	0x7a, 0xf5, 0xa2, 0x77, 0x10, 0xdc, 0x95, 0xc2, 0x10, 0xac, 0x23, 0xbf, 0xf4, 0x87, 0xd3, 0x2e,
	0xf1, 0x29, 0x38, 0x67, 0x56, 0x34, 0xc3, 0xb9, 0x74, 0xe2, 0xbd, 0xf9, 0xd6, 0x88, 0x3e, 0x42,
	0xf8, 0x77, 0xa9, 0xff, 0xc9, 0x4f, 0x3f, 0xc0, 0xe8, 0x73, 0xc1, 0xce, 0x65, 0x53, 0xa3, 0x0f,
	0xce, 0xe6, 0x47, 0x9a, 0x7e, 0x0f, 0x1f, 0xd0, 0x03, 0x7b, 0xb3, 0xde, 0xd2, 0xd0, 0x68, 0xcd,
	0xed, 0x6a, 0xbe, 0x5a, 0x86, 0x26, 0x3e, 0x81, 0xf1, 0x97, 0xf5, 0xb7, 0xaf, 0x29, 0xcd, 0x96,
	0x8b, 0xe5, 0x7a, 0xbb, 0x09, 0xad, 0x5d, 0x77, 0xdd, 0x5e, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x32, 0x23, 0xa8, 0xd1, 0x87, 0x02, 0x00, 0x00,
}
